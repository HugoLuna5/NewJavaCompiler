.data 
VT_A_101: NOP             ; VT de la clase A 
.data 
VT_Mamifero_103: NOP             ; VT de la clase Mamifero 
.data 
VT_Animal_102: NOP             ; VT de la clase Animal 
.data 
VT_Object_99: NOP             ; VT de la clase Object 
.data 
VT_Perro_104: NOP             ; VT de la clase Perro 
.data 
VT_System_100: NOP             ; VT de la clase System 
.code 
                   PUSH simple_heap_init 
                   CALL            
                   PUSH met_main_539 
                   CALL            
                   HALT            
simple_heap_init: RET 0           ; Retorna inmediatamente 
simple_malloc: LOADFP          ; Inicialización unidad 
                   LOADSP          
                   STOREFP         ; Finaliza inicialización del RA 
                   LOADHL          ; hl 
                   DUP             ; hl 
                   PUSH 1          ; 1 
                   ADD             ; hl+1 
                   STORE 4         ; Guarda el resultado (un puntero a la primer celda de la región de memoria) 
                   LOAD 3          ; Carga la cantidad de celdas a alojar (parámetro que debe ser positivo) 
                   ADD             
                   STOREHL         ; Mueve el heap limit (hl). Expande el heap 
                   STOREFP         
                   RET 1           ; Retorna eliminando el parámetro 
.data 
mensaje_error_cast: DW "[Excepcion] Se produjo error al intentar castear",0 ; Mensaje para casteos erroneos 
.code 
error_cast: PUSH mensaje_error_cast ; Apilo msj de error 
                   SPRINT          
                   HALT            
met_A_540: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_main_539: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   RMEM 1          ; Reservo espacio para la referencia al objeto del Ctor 
                   PUSH 2          ; Apilo el tamanio del CIR 
                   PUSH simple_malloc ; Preparo llamada a malloc 
                   CALL            ; Invoco al malloc 
                   DUP             ; Duplico la referencia al CIR 
                   PUSH VT_Perro_104 ; Guardo la etiqueta de la VT en el CIR 
                   STOREREF 0      
                   DUP             
                   PUSH 104        ; Guardo el ID de la clase en el CIR 
                   STOREREF 1      
                   DUP             
                   PUSH met_Perro_543 ; Llamo al constructor (estoy en un new) 
                   CALL            
                   STORE 0         ; Guardo parametro/var local a1 
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   RMEM 1          ; Reservo espacio para la referencia al objeto del Ctor 
                   PUSH 2          ; Apilo el tamanio del CIR 
                   PUSH simple_malloc ; Preparo llamada a malloc 
                   CALL            ; Invoco al malloc 
                   DUP             ; Duplico la referencia al CIR 
                   PUSH VT_Perro_104 ; Guardo la etiqueta de la VT en el CIR 
                   STOREREF 0      
                   DUP             
                   PUSH 104        ; Guardo el ID de la clase en el CIR 
                   STOREREF 1      
                   DUP             
                   PUSH met_Perro_543 ; Llamo al constructor (estoy en un new) 
                   CALL            
                   STORE -1        ; Guardo parametro/var local p1 
                                   ; Comienzo del IF_544 
                   LOAD 0          ; Cargo parametro/var local a1 
                   LOADREF 1       ; Cargo el ID desde el CIR de la expresion analizada (izq) 
                   PUSH 104        ; Cargo el ID de la Clase (der) 
                   EQ              ; Comparo los IDs. El resultado queda en el tope de la pila 
                   BF IF_L1_544    
.data 
str_545: DW "a1 es instancia de perro [OK]",0 ; Guardo un string 
.code 
                   PUSH str_545    ; Apilo un string 
                   PUSH met_printSln_538 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   JUMP IF_L2_544  
IF_L1_544: NOP             ;  
.data 
str_546: DW "a1 es instancia de perro [ERROR]",0 ; Guardo un string 
.code 
                   PUSH str_546    ; Apilo un string 
                   PUSH met_printSln_538 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_544: NOP             ;  
                                   ; Fin del IF_544 
                                   ; Comienzo del IF_547 
                   LOAD 0          ; Cargo parametro/var local a1 
                   LOADREF 1       ; Cargo el ID desde el CIR de la expresion analizada (izq) 
                   PUSH 102        ; Cargo el ID de la Clase (der) 
                   EQ              ; Comparo los IDs. El resultado queda en el tope de la pila 
                   BF IF_L1_547    
.data 
str_548: DW "a1 no es instancia de animal [ERROR]",0 ; Guardo un string 
.code 
                   PUSH str_548    ; Apilo un string 
                   PUSH met_printSln_538 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   JUMP IF_L2_547  
IF_L1_547: NOP             ;  
.data 
str_549: DW "a1 no es instancia de animal [OK]",0 ; Guardo un string 
.code 
                   PUSH str_549    ; Apilo un string 
                   PUSH met_printSln_538 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_547: NOP             ;  
                                   ; Fin del IF_547 
                   FMEM 2          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_Mamifero_542: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_Animal_541: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_Object_527: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_Perro_543: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_System_528: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printC_531: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printS_533: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_println_534: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printCln_536: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printSln_538: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_read_529: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   READ            
                   STORE 3         
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printB_530: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printIln_537: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printI_532: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printBln_535: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
