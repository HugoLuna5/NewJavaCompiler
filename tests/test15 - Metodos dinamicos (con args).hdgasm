.data 
VT_A_55: NOP             ; VT de la clase A 
.data 
VT_B_56:                    DW met_m1_312   ; Metodo m1 cuyo offset es 0 
.data 
VT_C_57:                    DW met_m1_312   ; Metodo m1 cuyo offset es 0 
                   DW met_m2_314   ; Metodo m2 cuyo offset es 1 
.data 
VT_D_58:                    DW met_m1_312   ; Metodo m1 cuyo offset es 0 
                   DW met_m2_314   ; Metodo m2 cuyo offset es 1 
.data 
VT_Object_53: NOP             ; VT de la clase Object 
.data 
VT_System_54: NOP             ; VT de la clase System 
.code 
                   PUSH simple_heap_init 
                   CALL            
                   PUSH met_main_310 
                   CALL            
                   HALT            
simple_heap_init: RET 0           ; Retorna inmediatamente 
simple_malloc: LOADFP          ; Inicialización unidad 
                   LOADSP          
                   STOREFP         ; Finaliza inicialización del RA 
                   LOADHL          ; hl 
                   DUP             ; hl 
                   PUSH 1          ; 1 
                   ADD             ; hl+1 
                   STORE 4         ; Guarda el resultado (un puntero a la primer celda de la región de memoria) 
                   LOAD 3          ; Carga la cantidad de celdas a alojar (parámetro que debe ser positivo) 
                   ADD             
                   STOREHL         ; Mueve el heap limit (hl). Expande el heap 
                   STOREFP         
                   RET 1           ; Retorna eliminando el parámetro 
.data 
mensaje_error_cast: DW "[Excepcion] Se produjo error al intentar castear",0 ; Mensaje para casteos erroneos 
.code 
error_cast: PUSH mensaje_error_cast ; Apilo msj de error 
                   SPRINT          
                   HALT            
met_A_311: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_main_310: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   RMEM 1          ; Reservo espacio para la referencia al objeto del Ctor 
                   PUSH 2          ; Apilo el tamanio del CIR 
                   PUSH simple_malloc ; Preparo llamada a malloc 
                   CALL            ; Invoco al malloc 
                   DUP             ; Duplico la referencia al CIR 
                   PUSH VT_B_56    ; Guardo la etiqueta de la VT en el CIR 
                   STOREREF 0      
                   DUP             
                   PUSH 56         ; Guardo el ID de la clase en el CIR 
                   STOREREF 1      
                   DUP             
                   PUSH met_B_313  ; Llamo al constructor (estoy en un new) 
                   CALL            
                   STORE 0         ; Guardo parametro/var local b 
                   RMEM 1          ; Reservo espacio para la referencia al objeto del Ctor 
                   PUSH 2          ; Apilo el tamanio del CIR 
                   PUSH simple_malloc ; Preparo llamada a malloc 
                   CALL            ; Invoco al malloc 
                   DUP             ; Duplico la referencia al CIR 
                   PUSH VT_C_57    ; Guardo la etiqueta de la VT en el CIR 
                   STOREREF 0      
                   DUP             
                   PUSH 57         ; Guardo el ID de la clase en el CIR 
                   STOREREF 1      
                   DUP             
                   PUSH met_C_315  ; Llamo al constructor (estoy en un new) 
                   CALL            
                   STORE -1        ; Guardo parametro/var local c 
                   RMEM 1          ; Reservo espacio para la referencia al objeto del Ctor 
                   PUSH 2          ; Apilo el tamanio del CIR 
                   PUSH simple_malloc ; Preparo llamada a malloc 
                   CALL            ; Invoco al malloc 
                   DUP             ; Duplico la referencia al CIR 
                   PUSH VT_D_58    ; Guardo la etiqueta de la VT en el CIR 
                   STOREREF 0      
                   DUP             
                   PUSH 58         ; Guardo el ID de la clase en el CIR 
                   STOREREF 1      
                   DUP             
                   PUSH met_D_316  ; Llamo al constructor (estoy en un new) 
                   CALL            
                   STORE -2        ; Guardo parametro/var local d 
.data 
str_317: DW "Soy B... ",0 ; Guardo un string 
.code 
                   PUSH str_317    ; Apilo un string 
                   PUSH met_printSln_309 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   LOAD 0          ; Cargo parametro/var local b 
                   PUSH 2          ; Apilo un 2 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   PUSH 3          ; Apilo un 3 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
.data 
str_318: DW "2+3=",0     ; Guardo un string 
.code 
                   PUSH str_318    ; Apilo un string 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 0       ; Cargo el offset del metodo m1 
                   CALL            
.data 
str_319: DW "Soy C... ",0 ; Guardo un string 
.code 
                   PUSH str_319    ; Apilo un string 
                   PUSH met_printSln_309 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   LOAD -1         ; Cargo parametro/var local c 
                   PUSH 15         ; Apilo un 15 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   PUSH 15         ; Apilo un 15 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
.data 
str_320: DW "Deberia dar 30... ",0 ; Guardo un string 
.code 
                   PUSH str_320    ; Apilo un string 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 0       ; Cargo el offset del metodo m1 
                   CALL            
                   LOAD -1         ; Cargo parametro/var local c 
                   PUSH 1          ; Apilo TRUE 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 1       ; Cargo el offset del metodo m2 
                   CALL            
.data 
str_321: DW "Soy D... ",0 ; Guardo un string 
.code 
                   PUSH str_321    ; Apilo un string 
                   PUSH met_printSln_309 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   LOAD -2         ; Cargo parametro/var local d 
                   PUSH 2          ; Apilo un 2 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   PUSH 2          ; Apilo un 2 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
.data 
str_322: DW "Hago cuentas, 2+2=",0 ; Guardo un string 
.code 
                   PUSH str_322    ; Apilo un string 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 0       ; Cargo el offset del metodo m1 
                   CALL            
                   LOAD -2         ; Cargo parametro/var local d 
                   PUSH 0          ; Apilo FALSE 
                   NOT             
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 1       ; Cargo el offset del metodo m2 
                   CALL            
                   RMEM 1          ; Reservo espacio para la referencia al objeto del Ctor 
                   PUSH 2          ; Apilo el tamanio del CIR 
                   PUSH simple_malloc ; Preparo llamada a malloc 
                   CALL            ; Invoco al malloc 
                   DUP             ; Duplico la referencia al CIR 
                   PUSH VT_D_58    ; Guardo la etiqueta de la VT en el CIR 
                   STOREREF 0      
                   DUP             
                   PUSH 58         ; Guardo el ID de la clase en el CIR 
                   STOREREF 1      
                   DUP             
                   PUSH met_D_316  ; Llamo al constructor (estoy en un new) 
                   CALL            
                   STORE 0         ; Guardo parametro/var local b 
.data 
str_323: DW "Soy D (con new B) ",0 ; Guardo un string 
.code 
                   PUSH str_323    ; Apilo un string 
                   PUSH met_printSln_309 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   LOAD 0          ; Cargo parametro/var local b 
                   PUSH 10         ; Apilo un 10 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   PUSH 5          ; Apilo un 5 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
.data 
str_324: DW "10+5=",0    ; Guardo un string 
.code 
                   PUSH str_324    ; Apilo un string 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 0       ; Cargo el offset del metodo m1 
                   CALL            
                   FMEM 3          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_B_313: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_m1_312: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 4          ; Cargo parametro/var local str 
                   PUSH met_printS_304 ; Preparo para llamar al metodo System.printS 
                   CALL            
                   LOAD 6          ; Cargo parametro/var local a 
                   LOAD 5          ; Cargo parametro/var local b 
                   ADD             
                   PUSH met_printIln_308 ; Preparo para llamar al metodo System.printIln 
                   CALL            
                   STOREFP         ; Reestablece el contexto 
                   RET 4           ; Retorna de la llamada, liberando parametros 
met_C_315: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_m2_314: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                                   ; Comienzo del IF_325 
                   LOAD 4          ; Cargo parametro/var local rta 
                   BF IF_L1_325    
.data 
str_326: DW "[OK] Entre por el if",0 ; Guardo un string 
.code 
                   PUSH str_326    ; Apilo un string 
                   PUSH met_printSln_309 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   JUMP IF_L2_325  
IF_L1_325: NOP             ;  
.data 
str_327: DW "[ERROR] Entre por el else",0 ; Guardo un string 
.code 
                   PUSH str_327    ; Apilo un string 
                   PUSH met_printSln_309 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_325: NOP             ;  
                                   ; Fin del IF_325 
                   STOREFP         ; Reestablece el contexto 
                   RET 2           ; Retorna de la llamada, liberando parametros 
met_D_316: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_Object_298: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_System_299: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printC_302: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printS_304: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_println_305: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printCln_307: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printSln_309: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_read_300: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   READ            
                   STORE 3         
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printB_301: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printIln_308: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printI_303: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printBln_306: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
