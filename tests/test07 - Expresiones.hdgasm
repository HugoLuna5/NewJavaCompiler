.data 
VT_A_22: NOP             ; VT de la clase A 
.data 
VT_Object_20: NOP             ; VT de la clase Object 
.data 
VT_System_21: NOP             ; VT de la clase System 
.code 
                   PUSH simple_heap_init 
                   CALL            
                   PUSH met_main_113 
                   CALL            
                   HALT            
simple_heap_init: RET 0           ; Retorna inmediatamente 
simple_malloc: LOADFP          ; Inicialización unidad 
                   LOADSP          
                   STOREFP         ; Finaliza inicialización del RA 
                   LOADHL          ; hl 
                   DUP             ; hl 
                   PUSH 1          ; 1 
                   ADD             ; hl+1 
                   STORE 4         ; Guarda el resultado (un puntero a la primer celda de la región de memoria) 
                   LOAD 3          ; Carga la cantidad de celdas a alojar (parámetro que debe ser positivo) 
                   ADD             
                   STOREHL         ; Mueve el heap limit (hl). Expande el heap 
                   STOREFP         
                   RET 1           ; Retorna eliminando el parámetro 
.data 
mensaje_error_cast: DW "[Excepcion] Se produjo error al intentar castear",0 ; Mensaje para casteos erroneos 
.code 
error_cast: PUSH mensaje_error_cast ; Apilo msj de error 
                   SPRINT          
                   HALT            
met_A_114: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_main_113: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 3          ; Se declaran 3 variables locales. Reservo lugar. 
                   RMEM 2          ; Se declaran 2 variables locales. Reservo lugar. 
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   PUSH 2          ; Apilo un 2 
                   PUSH 3          ; Apilo un 3 
                   ADD             
                   PUSH 6          ; Apilo un 6 
                   MUL             
                   PUSH 2          ; Apilo un 2 
                   DIV             
                   STORE 0         ; Guardo parametro/var local a 
                   LOAD 0          ; Cargo parametro/var local a 
                   PUSH 100        ; Apilo un 100 
                   MUL             
                   STORE -1        ; Guardo parametro/var local b 
                   LOAD -1         ; Cargo parametro/var local b 
                   NEG             
                   STORE -2        ; Guardo parametro/var local c 
                   PUSH 1          ; Apilo TRUE 
                   STORE -3        ; Guardo parametro/var local d 
                   PUSH 0          ; Apilo FALSE 
                   STORE -4        ; Guardo parametro/var local e 
.data 
str_115: DW "Hola",0     ; Guardo un string 
.code 
                   PUSH str_115    ; Apilo un string 
                   STORE -5        ; Guardo parametro/var local str 
                                   ; Comienzo del IF_116 
                   LOAD -3         ; Cargo parametro/var local d 
                   LOAD -4         ; Cargo parametro/var local e 
                   AND             
                   BF IF_L1_116    
.data 
str_117: DW "No deberia entrar por aca [Hay un error]",0 ; Guardo un string 
.code 
                   PUSH str_117    ; Apilo un string 
                   PUSH met_printSln_112 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   JUMP IF_L2_116  
IF_L1_116: NOP             ;  
.data 
str_118: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_118    ; Apilo un string 
                   PUSH met_printSln_112 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_116: NOP             ;  
                                   ; Fin del IF_116 
                                   ; Comienzo del IF_119 
                   LOAD -1         ; Cargo parametro/var local b 
                   PUSH 2          ; Apilo un 2 
                   MOD             
                   PUSH 0          ; Apilo un 0 
                   EQ              
                   BF IF_L1_119    
.data 
str_120: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_120    ; Apilo un string 
                   PUSH met_printSln_112 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   JUMP IF_L2_119  
IF_L1_119: NOP             ;  
.data 
str_121: DW "No deberia entrar por aca [Hay un error]",0 ; Guardo un string 
.code 
                   PUSH str_121    ; Apilo un string 
                   PUSH met_printSln_112 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_119: NOP             ;  
                                   ; Fin del IF_119 
                                   ; Comienzo del IF_122 
                   LOAD -2         ; Cargo parametro/var local c 
                   LOAD -1         ; Cargo parametro/var local b 
                   NE              
                   BF IF_L_122     
.data 
str_123: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_123    ; Apilo un string 
                   PUSH met_printSln_112 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L_122: NOP             ;  
                                   ; Fin del IF_122 
                                   ; Comienzo del IF_124 
                   LOAD -2         ; Cargo parametro/var local c 
                   LOAD -1         ; Cargo parametro/var local b 
                   NEG             
                   EQ              
                   BF IF_L_124     
.data 
str_125: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_125    ; Apilo un string 
                   PUSH met_printSln_112 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L_124: NOP             ;  
                                   ; Fin del IF_124 
                                   ; Comienzo del IF_126 
                   LOAD -3         ; Cargo parametro/var local d 
                   NOT             
                   LOAD -4         ; Cargo parametro/var local e 
                   OR              
                   BF IF_L1_126    
.data 
str_127: DW "No deberia entrar por aca [Hay un error]",0 ; Guardo un string 
.code 
                   PUSH str_127    ; Apilo un string 
                   PUSH met_printSln_112 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   JUMP IF_L2_126  
IF_L1_126: NOP             ;  
.data 
str_128: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_128    ; Apilo un string 
                   PUSH met_printSln_112 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_126: NOP             ;  
                                   ; Fin del IF_126 
                                   ; Comienzo del IF_129 
                   LOAD -3         ; Cargo parametro/var local d 
                   LOAD -4         ; Cargo parametro/var local e 
                   NOT             
                   AND             
                   BF IF_L1_129    
.data 
str_130: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_130    ; Apilo un string 
                   PUSH met_printSln_112 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   PUSH 123        ; Apilo un 123 
                   STORE 0         ; Guardo parametro/var local a 
                   JUMP IF_L2_129  
IF_L1_129: NOP             ;  
.data 
str_131: DW "No deberia entrar por aca [Hay un error]",0 ; Guardo un string 
.code 
                   PUSH str_131    ; Apilo un string 
                   PUSH met_printSln_112 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_129: NOP             ;  
                                   ; Fin del IF_129 
                                   ; Comienzo del IF_132 
                   LOAD 0          ; Cargo parametro/var local a 
                   PUSH 123        ; Apilo un 123 
                   EQ              
                   BF IF_L_132     
.data 
str_133: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_133    ; Apilo un string 
                   PUSH met_printSln_112 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L_132: NOP             ;  
                                   ; Fin del IF_132 
                   LOAD -5         ; Cargo parametro/var local str 
                   PUSH met_printSln_112 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   FMEM 6          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_Object_101: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_System_102: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printC_105: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printS_107: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_println_108: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printCln_110: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printSln_112: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_read_103: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   READ            
                   STORE 3         
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printB_104: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printIln_111: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printI_106: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printBln_109: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
