.data 
VT_A_13: NOP             ; VT de la clase A 
.data 
VT_Object_11: NOP             ; VT de la clase Object 
.data 
VT_System_12: NOP             ; VT de la clase System 
.code 
                   PUSH simple_heap_init 
                   CALL            
                   PUSH met_main_61 
                   CALL            
                   HALT            
simple_heap_init: RET 0           ; Retorna inmediatamente 
simple_malloc: LOADFP          ; Inicialización unidad 
                   LOADSP          
                   STOREFP         ; Finaliza inicialización del RA 
                   LOADHL          ; hl 
                   DUP             ; hl 
                   PUSH 1          ; 1 
                   ADD             ; hl+1 
                   STORE 4         ; Guarda el resultado (un puntero a la primer celda de la región de memoria) 
                   LOAD 3          ; Carga la cantidad de celdas a alojar (parámetro que debe ser positivo) 
                   ADD             
                   STOREHL         ; Mueve el heap limit (hl). Expande el heap 
                   STOREFP         
                   RET 1           ; Retorna eliminando el parámetro 
.data 
mensaje_error_cast: DW "[Excepcion] Se produjo error al intentar castear",0 ; Mensaje para casteos erroneos 
.code 
error_cast: PUSH mensaje_error_cast ; Apilo msj de error 
                   SPRINT          
                   HALT            
met_A_62: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_main_61: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                                   ; Comienzo del IF_63 
                   PUSH 1          ; Apilo TRUE 
                   BF IF_L_63      
.data 
str_64: DW "Entra bien al primer if [OK]",0 ; Guardo un string 
.code 
                   PUSH str_64     ; Apilo un string 
                   PUSH met_printSln_60 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L_63: NOP             ;  
                                   ; Fin del IF_63 
                                   ; Comienzo del IF_65 
                   PUSH 3          ; Apilo un 3 
                   PUSH 2          ; Apilo un 2 
                   GT              
                   BF IF_L1_65     
.data 
str_66: DW "Entra bien al segundo if [OK]",0 ; Guardo un string 
.code 
                   PUSH str_66     ; Apilo un string 
                   PUSH met_printSln_60 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   JUMP IF_L2_65   
IF_L1_65: NOP             ;  
.data 
str_67: DW "Ups, aca no deberia entrar (else del 2do if) [ERROR] ",0 ; Guardo un string 
.code 
                   PUSH str_67     ; Apilo un string 
                   PUSH met_printSln_60 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_65: NOP             ;  
                                   ; Fin del IF_65 
                                   ; Comienzo del IF_68 
                   PUSH 2          ; Apilo un 2 
                   PUSH 3          ; Apilo un 3 
                   GT              
                   BF IF_L1_68     
.data 
str_69: DW "Ups, aca no deberia entrar (sent del 3er if) [ERROR]",0 ; Guardo un string 
.code 
                   PUSH str_69     ; Apilo un string 
                   PUSH met_printSln_60 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   JUMP IF_L2_68   
IF_L1_68: NOP             ;  
.data 
str_70: DW "Entra bien al tercer if [OK]",0 ; Guardo un string 
.code 
                   PUSH str_70     ; Apilo un string 
                   PUSH met_printSln_60 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_68: NOP             ;  
                                   ; Fin del IF_68 
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_Object_49: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_System_50: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printC_53: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printS_55: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_println_56: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printCln_58: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printSln_60: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_read_51: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   READ            
                   STORE 3         
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printB_52: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printIln_59: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printI_54: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printBln_57: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
