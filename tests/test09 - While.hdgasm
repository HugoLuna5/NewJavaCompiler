.data 
VT_A_28: NOP             ; VT de la clase A 
.data 
VT_Object_26: NOP             ; VT de la clase Object 
.data 
VT_System_27: NOP             ; VT de la clase System 
.code 
                   PUSH simple_heap_init 
                   CALL            
                   PUSH met_main_169 
                   CALL            
                   HALT            
simple_heap_init: RET 0           ; Retorna inmediatamente 
simple_malloc: LOADFP          ; Inicialización unidad 
                   LOADSP          
                   STOREFP         ; Finaliza inicialización del RA 
                   LOADHL          ; hl 
                   DUP             ; hl 
                   PUSH 1          ; 1 
                   ADD             ; hl+1 
                   STORE 4         ; Guarda el resultado (un puntero a la primer celda de la región de memoria) 
                   LOAD 3          ; Carga la cantidad de celdas a alojar (parámetro que debe ser positivo) 
                   ADD             
                   STOREHL         ; Mueve el heap limit (hl). Expande el heap 
                   STOREFP         
                   RET 1           ; Retorna eliminando el parámetro 
.data 
mensaje_error_cast: DW "[Excepcion] Se produjo error al intentar castear",0 ; Mensaje para casteos erroneos 
.code 
error_cast: PUSH mensaje_error_cast ; Apilo msj de error 
                   SPRINT          
                   HALT            
met_A_170: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_main_169: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 3          ; Se declaran 3 variables locales. Reservo lugar. 
                   RMEM 2          ; Se declaran 2 variables locales. Reservo lugar. 
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   PUSH 0          ; Apilo un 0 
                   STORE 0         ; Guardo parametro/var local a 
                                   ; Comienzo del WHILE_171 
WHILE_L1_171: NOP             ;  
                   LOAD 0          ; Cargo parametro/var local a 
                   PUSH 10         ; Apilo un 10 
                   LT              
                   BF WHILE_L2_171 
                   LOAD 0          ; Cargo parametro/var local a 
                   PUSH 1          ; Apilo un 1 
                   ADD             
                   STORE 0         ; Guardo parametro/var local a 
                   JUMP WHILE_L1_171 
WHILE_L2_171: NOP             ;  
                                   ; Fin del WHILE_171 
                                   ; Comienzo del WHILE_172 
WHILE_L1_172: NOP             ;  
                   LOAD 0          ; Cargo parametro/var local a 
                   PUSH 20         ; Apilo un 20 
                   LT              
                   BF WHILE_L2_172 
                   LOAD 0          ; Cargo parametro/var local a 
                   PUSH met_printIln_167 ; Preparo para llamar al metodo System.printIln 
                   CALL            
                   LOAD 0          ; Cargo parametro/var local a 
                   PUSH 1          ; Apilo un 1 
                   ADD             
                   STORE 0         ; Guardo parametro/var local a 
                   JUMP WHILE_L1_172 
WHILE_L2_172: NOP             ;  
                                   ; Fin del WHILE_172 
                                   ; Comienzo del IF_173 
                   LOAD 0          ; Cargo parametro/var local a 
                   PUSH 20         ; Apilo un 20 
                   EQ              
                   BF IF_L1_173    
.data 
str_174: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_174    ; Apilo un string 
                   PUSH met_printSln_168 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   JUMP IF_L2_173  
IF_L1_173: NOP             ;  
.data 
str_175: DW "[ERROR]",0  ; Guardo un string 
.code 
                   PUSH str_175    ; Apilo un string 
                   PUSH met_printSln_168 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_173: NOP             ;  
                                   ; Fin del IF_173 
                   FMEM 6          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_Object_157: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_System_158: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printC_161: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printS_163: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_println_164: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printCln_166: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printSln_168: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_read_159: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   READ            
                   STORE 3         
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printB_160: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printIln_167: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printI_162: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printBln_165: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
