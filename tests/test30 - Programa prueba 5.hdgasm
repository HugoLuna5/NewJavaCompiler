.data 
VT_A_11: NOP             ; VT de la clase A 
.data 
VT_Persona_12:                    DW met_getAnio_60 ; Metodo getAnio cuyo offset es 0 
                   DW met_compareTo_61 ; Metodo compareTo cuyo offset es 1 
                   DW met_getMes_59 ; Metodo getMes cuyo offset es 2 
                   DW met_getDia_58 ; Metodo getDia cuyo offset es 3 
.data 
VT_SystemIO_13: NOP             ; VT de la clase SystemIO 
.data 
VT_Object_9: NOP             ; VT de la clase Object 
.data 
VT_System_10: NOP             ; VT de la clase System 
.code 
                   PUSH simple_heap_init 
                   CALL            
                   PUSH met_main_55 
                   CALL            
                   HALT            
simple_heap_init: RET 0           ; Retorna inmediatamente 
simple_malloc: LOADFP          ; Inicialización unidad 
                   LOADSP          
                   STOREFP         ; Finaliza inicialización del RA 
                   LOADHL          ; hl 
                   DUP             ; hl 
                   PUSH 1          ; 1 
                   ADD             ; hl+1 
                   STORE 4         ; Guarda el resultado (un puntero a la primer celda de la región de memoria) 
                   LOAD 3          ; Carga la cantidad de celdas a alojar (parámetro que debe ser positivo) 
                   ADD             
                   STOREHL         ; Mueve el heap limit (hl). Expande el heap 
                   STOREFP         
                   RET 1           ; Retorna eliminando el parámetro 
.data 
mensaje_error_cast: DW "[Excepcion] Se produjo error al intentar castear",0 ; Mensaje para casteos erroneos 
.code 
error_cast: PUSH mensaje_error_cast ; Apilo msj de error 
                   SPRINT          
                   HALT            
met_A_56: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_main_55: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 2          ; Se declaran 2 variables locales. Reservo lugar. 
                   RMEM 6          ; Se declaran 6 variables locales. Reservo lugar. 
.data 
str_64: DW "Ingrese un dia: ",0 ; Guardo un string 
.code 
                   PUSH str_64     ; Apilo un string 
                   PUSH met_printS_49 ; Preparo para llamar al metodo System.printS 
                   CALL            
                   RMEM 1          ; Voy a llamar a un metodo estatico (no void), reservo lugar para lo que devuelva 
                   PUSH met_readNumero_62 ; Preparo para llamar al metodo SystemIO.readNumero 
                   CALL            
                   STORE -2        ; Guardo parametro/var local d1 
.data 
str_65: DW "Ingrese un mes: ",0 ; Guardo un string 
.code 
                   PUSH str_65     ; Apilo un string 
                   PUSH met_printS_49 ; Preparo para llamar al metodo System.printS 
                   CALL            
                   RMEM 1          ; Voy a llamar a un metodo estatico (no void), reservo lugar para lo que devuelva 
                   PUSH met_readNumero_62 ; Preparo para llamar al metodo SystemIO.readNumero 
                   CALL            
                   STORE -4        ; Guardo parametro/var local m1 
.data 
str_66: DW "Ingrese un año: ",0 ; Guardo un string 
.code 
                   PUSH str_66     ; Apilo un string 
                   PUSH met_printS_49 ; Preparo para llamar al metodo System.printS 
                   CALL            
                   RMEM 1          ; Voy a llamar a un metodo estatico (no void), reservo lugar para lo que devuelva 
                   PUSH met_readNumero_62 ; Preparo para llamar al metodo SystemIO.readNumero 
                   CALL            
                   STORE -6        ; Guardo parametro/var local a1 
.data 
str_67: DW "Creando Persona 1",0 ; Guardo un string 
.code 
                   PUSH str_67     ; Apilo un string 
                   PUSH met_printS_49 ; Preparo para llamar al metodo System.printS 
                   CALL            
                   RMEM 1          ; Reservo espacio para la referencia al objeto del Ctor 
                   PUSH 5          ; Apilo el tamanio del CIR 
                   PUSH simple_malloc ; Preparo llamada a malloc 
                   CALL            ; Invoco al malloc 
                   DUP             ; Duplico la referencia al CIR 
                   PUSH VT_Persona_12 ; Guardo la etiqueta de la VT en el CIR 
                   STOREREF 0      
                   DUP             
                   PUSH 12         ; Guardo el ID de la clase en el CIR 
                   STOREREF 1      
                   DUP             
                   LOAD -2         ; Cargo parametro/var local d1 
                   SWAP            ; Intercambio this por expresion 
                   LOAD -4         ; Cargo parametro/var local m1 
                   SWAP            ; Intercambio this por expresion 
                   LOAD -6         ; Cargo parametro/var local a1 
                   SWAP            ; Intercambio this por expresion 
                   PUSH met_Persona_57 ; Llamo al constructor (estoy en un new) 
                   CALL            
                   STORE 0         ; Guardo parametro/var local a 
.data 
str_68: DW "Ingrese un dia: ",0 ; Guardo un string 
.code 
                   PUSH str_68     ; Apilo un string 
                   PUSH met_printS_49 ; Preparo para llamar al metodo System.printS 
                   CALL            
                   RMEM 1          ; Voy a llamar a un metodo estatico (no void), reservo lugar para lo que devuelva 
                   PUSH met_readNumero_62 ; Preparo para llamar al metodo SystemIO.readNumero 
                   CALL            
                   STORE -3        ; Guardo parametro/var local d2 
.data 
str_69: DW "Ingrese un mes: ",0 ; Guardo un string 
.code 
                   PUSH str_69     ; Apilo un string 
                   PUSH met_printS_49 ; Preparo para llamar al metodo System.printS 
                   CALL            
                   RMEM 1          ; Voy a llamar a un metodo estatico (no void), reservo lugar para lo que devuelva 
                   PUSH met_readNumero_62 ; Preparo para llamar al metodo SystemIO.readNumero 
                   CALL            
                   STORE -5        ; Guardo parametro/var local m2 
.data 
str_70: DW "Ingrese un año: ",0 ; Guardo un string 
.code 
                   PUSH str_70     ; Apilo un string 
                   PUSH met_printS_49 ; Preparo para llamar al metodo System.printS 
                   CALL            
                   RMEM 1          ; Voy a llamar a un metodo estatico (no void), reservo lugar para lo que devuelva 
                   PUSH met_readNumero_62 ; Preparo para llamar al metodo SystemIO.readNumero 
                   CALL            
                   STORE -7        ; Guardo parametro/var local a2 
.data 
str_71: DW "Creando Persona 2",0 ; Guardo un string 
.code 
                   PUSH str_71     ; Apilo un string 
                   PUSH met_printS_49 ; Preparo para llamar al metodo System.printS 
                   CALL            
                   RMEM 1          ; Reservo espacio para la referencia al objeto del Ctor 
                   PUSH 5          ; Apilo el tamanio del CIR 
                   PUSH simple_malloc ; Preparo llamada a malloc 
                   CALL            ; Invoco al malloc 
                   DUP             ; Duplico la referencia al CIR 
                   PUSH VT_Persona_12 ; Guardo la etiqueta de la VT en el CIR 
                   STOREREF 0      
                   DUP             
                   PUSH 12         ; Guardo el ID de la clase en el CIR 
                   STOREREF 1      
                   DUP             
                   LOAD -3         ; Cargo parametro/var local d2 
                   SWAP            ; Intercambio this por expresion 
                   LOAD -5         ; Cargo parametro/var local m2 
                   SWAP            ; Intercambio this por expresion 
                   LOAD -7         ; Cargo parametro/var local a2 
                   SWAP            ; Intercambio this por expresion 
                   PUSH met_Persona_57 ; Llamo al constructor (estoy en un new) 
                   CALL            
                   STORE -1        ; Guardo parametro/var local b 
                                   ; Comienzo del IF_72 
                   LOAD 0          ; Cargo parametro/var local a 
                   RMEM 1          ; Estoy por hacer llamada encadenada, reservo para el valor de retorno 
                   SWAP            ; Bajo el this 
                   LOAD -1         ; Cargo parametro/var local b 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 1       ; Cargo el offset del metodo compareTo 
                   CALL            
                   BF IF_L1_72     
.data 
str_73: DW "Las personas tienen la misma fecha de nacimiento",0 ; Guardo un string 
.code 
                   PUSH str_73     ; Apilo un string 
                   PUSH met_printS_49 ; Preparo para llamar al metodo System.printS 
                   CALL            
                   JUMP IF_L2_72   
IF_L1_72: NOP             ;  
.data 
str_74: DW "Las personas cumplen en dias distintos",0 ; Guardo un string 
.code 
                   PUSH str_74     ; Apilo un string 
                   PUSH met_printS_49 ; Preparo para llamar al metodo System.printS 
                   CALL            
IF_L2_72: NOP             ;  
                                   ; Fin del IF_72 
                   FMEM 8          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_Persona_57: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 6          ; Cargo parametro/var local d 
                   LOAD 3          ; Cargo referencia al 'this' 
                   SWAP            ; Cambio valor del this por el valor a guardar 
                   STOREREF 3      ; Actualizo el valor de dia 
                   LOAD 5          ; Cargo parametro/var local m 
                   LOAD 3          ; Cargo referencia al 'this' 
                   SWAP            ; Cambio valor del this por el valor a guardar 
                   STOREREF 2      ; Actualizo el valor de mes 
                   LOAD 4          ; Cargo parametro/var local a 
                   LOAD 3          ; Cargo referencia al 'this' 
                   SWAP            ; Cambio valor del this por el valor a guardar 
                   STOREREF 4      ; Actualizo el valor de anio 
                   STOREFP         ; Reestablece el contexto 
                   RET 4           ; Retorna de la llamada, liberando parametros 
met_getAnio_60: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          ; Cargo referencia al 'this' 
                   LOADREF 4       ; Cargo variable de instancia 4 
                   STORE 4         
                   FMEM 0          ; Libero 0 variables locales 
                   STOREFP         
                   RET 1           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_compareTo_61: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          ; Cargo referencia al 'this' 
                   LOADREF 3       ; Cargo variable de instancia 3 
                   LOAD 4          ; Cargo parametro/var local p 
                   RMEM 1          ; Estoy por hacer llamada encadenada, reservo para el valor de retorno 
                   SWAP            ; Bajo el this 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 3       ; Cargo el offset del metodo getDia 
                   CALL            
                   EQ              
                   LOAD 3          ; Cargo referencia al 'this' 
                   LOADREF 2       ; Cargo variable de instancia 2 
                   LOAD 4          ; Cargo parametro/var local p 
                   RMEM 1          ; Estoy por hacer llamada encadenada, reservo para el valor de retorno 
                   SWAP            ; Bajo el this 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 2       ; Cargo el offset del metodo getMes 
                   CALL            
                   EQ              
                   AND             
                   LOAD 3          ; Cargo referencia al 'this' 
                   LOADREF 4       ; Cargo variable de instancia 4 
                   LOAD 4          ; Cargo parametro/var local p 
                   RMEM 1          ; Estoy por hacer llamada encadenada, reservo para el valor de retorno 
                   SWAP            ; Bajo el this 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 0       ; Cargo el offset del metodo getAnio 
                   CALL            
                   EQ              
                   AND             
                   STORE 5         
                   FMEM 0          ; Libero 0 variables locales 
                   STOREFP         
                   RET 2           
                   STOREFP         ; Reestablece el contexto 
                   RET 2           ; Retorna de la llamada, liberando parametros 
met_getMes_59: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          ; Cargo referencia al 'this' 
                   LOADREF 2       ; Cargo variable de instancia 2 
                   STORE 4         
                   FMEM 0          ; Libero 0 variables locales 
                   STOREFP         
                   RET 1           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_getDia_58: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          ; Cargo referencia al 'this' 
                   LOADREF 3       ; Cargo variable de instancia 3 
                   STORE 4         
                   FMEM 0          ; Libero 0 variables locales 
                   STOREFP         
                   RET 1           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_SystemIO_63: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_readNumero_62: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   RMEM 1          ; Voy a llamar a un metodo estatico (no void), reservo lugar para lo que devuelva 
                   PUSH met_read_45 ; Preparo para llamar al metodo System.read 
                   CALL            
                   STORE 0         ; Guardo parametro/var local rta 
                   LOAD 0          ; Cargo parametro/var local rta 
                   STORE 3         
                   FMEM 1          ; Libero 1 variables locales 
                   STOREFP         
                   RET 0           
                   FMEM 1          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_Object_43: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_System_44: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printC_47: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printS_49: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_println_50: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printCln_52: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printSln_54: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_read_45: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   READ            
                   STORE 3         
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printB_46: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printIln_53: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printI_48: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printBln_51: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
