.data 
VT_A_6: NOP             ; VT de la clase A 
.data 
VT_Object_4: NOP             ; VT de la clase Object 
.data 
VT_System_5: NOP             ; VT de la clase System 
.code 
                   PUSH simple_heap_init 
                   CALL            
                   PUSH met_main_35 
                   CALL            
                   HALT            
simple_heap_init: RET 0           ; Retorna inmediatamente 
simple_malloc: LOADFP          ; Inicialización unidad 
                   LOADSP          
                   STOREFP         ; Finaliza inicialización del RA 
                   LOADHL          ; hl 
                   DUP             ; hl 
                   PUSH 1          ; 1 
                   ADD             ; hl+1 
                   STORE 4         ; Guarda el resultado (un puntero a la primer celda de la región de memoria) 
                   LOAD 3          ; Carga la cantidad de celdas a alojar (parámetro que debe ser positivo) 
                   ADD             
                   STOREHL         ; Mueve el heap limit (hl). Expande el heap 
                   STOREFP         
                   RET 1           ; Retorna eliminando el parámetro 
.data 
mensaje_error_cast: DW "[Excepcion] Se produjo error al intentar castear",0 ; Mensaje para casteos erroneos 
.code 
error_cast: PUSH mensaje_error_cast ; Apilo msj de error 
                   SPRINT          
                   HALT            
met_A_36: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_main_35: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 3          ; Se declaran 3 variables locales. Reservo lugar. 
                   RMEM 2          ; Se declaran 2 variables locales. Reservo lugar. 
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   PUSH 100        ; Apilo un 100 
                   STORE 0         ; Guardo parametro/var local a 
                   PUSH 2          ; Apilo un 2 
                   STORE -1        ; Guardo parametro/var local b 
                   LOAD -1         ; Cargo parametro/var local b 
                   NEG             
                   STORE -2        ; Guardo parametro/var local c 
                                   ; Comienzo del IF_37 
                   LOAD 0          ; Cargo parametro/var local a 
                   LOAD -1         ; Cargo parametro/var local b 
                   GT              
                   BF IF_L1_37     
.data 
str_38: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_38     ; Apilo un string 
                   PUSH met_printSln_34 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                                   ; Comienzo del IF_39 
                   PUSH 1          ; Apilo TRUE 
                   BF IF_L1_39     
.data 
str_40: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_40     ; Apilo un string 
                   PUSH met_printSln_34 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                                   ; Comienzo del IF_41 
                   LOAD -2         ; Cargo parametro/var local c 
                   PUSH 1          ; Apilo un 1 
                   NEG             
                   MUL             
                   LOAD -1         ; Cargo parametro/var local b 
                   EQ              
                   BF IF_L1_41     
.data 
str_42: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_42     ; Apilo un string 
                   PUSH met_printSln_34 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   JUMP IF_L2_41   
IF_L1_41: NOP             ;  
.data 
str_43: DW "[ERROR]",0  ; Guardo un string 
.code 
                   PUSH str_43     ; Apilo un string 
                   PUSH met_printSln_34 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_41: NOP             ;  
                                   ; Fin del IF_41 
                   JUMP IF_L2_39   
IF_L1_39: NOP             ;  
.data 
str_44: DW "[ERROR]",0  ; Guardo un string 
.code 
                   PUSH str_44     ; Apilo un string 
                   PUSH met_printSln_34 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_39: NOP             ;  
                                   ; Fin del IF_39 
                   JUMP IF_L2_37   
IF_L1_37: NOP             ;  
.data 
str_45: DW "[ERROR]",0  ; Guardo un string 
.code 
                   PUSH str_45     ; Apilo un string 
                   PUSH met_printSln_34 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_37: NOP             ;  
                                   ; Fin del IF_37 
                   FMEM 6          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_Object_23: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_System_24: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printC_27: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printS_29: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_println_30: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printCln_32: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printSln_34: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_read_25: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   READ            
                   STORE 3         
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printB_26: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printIln_33: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printI_28: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printBln_31: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
