.data 
VT_Persona_113:                    DW met_buscarEnAgenda_586 ; Metodo buscarEnAgenda cuyo offset es 0 
                   DW met_llamar_585 ; Metodo llamar cuyo offset es 1 
                   DW met_mostrar_587 ; Metodo mostrar cuyo offset es 2 
.data 
VT_Object_111: NOP             ; VT de la clase Object 
.data 
VT_System_112: NOP             ; VT de la clase System 
.data 
VT_Entidad_114: NOP             ; VT de la clase Entidad 
.code 
                   PUSH simple_heap_init 
                   CALL            
                   PUSH met_main_588 
                   CALL            
                   HALT            
simple_heap_init: RET 0           ; Retorna inmediatamente 
simple_malloc: LOADFP          ; Inicialización unidad 
                   LOADSP          
                   STOREFP         ; Finaliza inicialización del RA 
                   LOADHL          ; hl 
                   DUP             ; hl 
                   PUSH 1          ; 1 
                   ADD             ; hl+1 
                   STORE 4         ; Guarda el resultado (un puntero a la primer celda de la región de memoria) 
                   LOAD 3          ; Carga la cantidad de celdas a alojar (parámetro que debe ser positivo) 
                   ADD             
                   STOREHL         ; Mueve el heap limit (hl). Expande el heap 
                   STOREFP         
                   RET 1           ; Retorna eliminando el parámetro 
.data 
mensaje_error_cast: DW "[Excepcion] Se produjo error al intentar castear",0 ; Mensaje para casteos erroneos 
.code 
error_cast: PUSH mensaje_error_cast ; Apilo msj de error 
                   SPRINT          
                   HALT            
met_Persona_584: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 6          ; Cargo parametro/var local nombre 
                   LOAD 3          ; Apilo 'this' 
                   SWAP            
                   STOREREF 4      
                   LOAD 5          ; Cargo parametro/var local direccion 
                   LOAD 3          ; Apilo 'this' 
                   SWAP            
                   STOREREF 2      
                   LOAD 4          ; Cargo parametro/var local telefono 
                   LOAD 3          ; Apilo 'this' 
                   SWAP            
                   STOREREF 3      
                   STOREFP         ; Reestablece el contexto 
                   RET 4           ; Retorna de la llamada, liberando parametros 
met_buscarEnAgenda_586: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 1          ; Reservo espacio para la referencia al objeto del Ctor 
                   PUSH 5          ; Apilo el tamanio del CIR 
                   PUSH simple_malloc ; Preparo llamada a malloc 
                   CALL            ; Invoco al malloc 
                   DUP             ; Duplico la referencia al CIR 
                   PUSH VT_Persona_113 ; Guardo la etiqueta de la VT en el CIR 
                   STOREREF 0      
                   DUP             
                   PUSH 113        ; Guardo el ID de la clase en el CIR 
                   STOREREF 1      
                   DUP             
.data 
str_590: DW "Cacho",0    ; Guardo un string 
.code 
                   PUSH str_590    ; Apilo un string 
                   SWAP            ; Intercambio this por expresion 
.data 
str_591: DW "Comahue",0  ; Guardo un string 
.code 
                   PUSH str_591    ; Apilo un string 
                   SWAP            ; Intercambio this por expresion 
                   PUSH 33333      ; Apilo un 33333 
                   SWAP            ; Intercambio this por expresion 
                   PUSH met_Persona_584 ; Llamo al constructor (estoy en un new) 
                   CALL            
                   STORE 5         
                   FMEM 0          ; Libero 0 variables locales 
                   STOREFP         
                   RET 2           
                   STOREFP         ; Reestablece el contexto 
                   RET 2           ; Retorna de la llamada, liberando parametros 
met_llamar_585: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          ; Apilo 'this' 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 2       ; Cargo el offset del metodo mostrar 
                   CALL            
                   LOAD 4          ; Cargo parametro/var local per 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 2       ; Cargo el offset del metodo mostrar 
                   CALL            
                   STOREFP         ; Reestablece el contexto 
                   RET 2           ; Retorna de la llamada, liberando parametros 
met_mostrar_587: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          ; Cargo referencia al 'this' 
                   LOADREF 4       ; Cargo variable de instancia 4 
                   PUSH met_printSln_583 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   LOAD 3          ; Cargo referencia al 'this' 
                   LOADREF 2       ; Cargo variable de instancia 2 
                   PUSH met_printSln_583 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   LOAD 3          ; Cargo referencia al 'this' 
                   LOADREF 3       ; Cargo variable de instancia 3 
                   PUSH met_printIln_582 ; Preparo para llamar al metodo System.printIln 
                   CALL            
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_Object_572: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_System_573: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printC_576: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printS_578: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_println_579: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printCln_581: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printSln_583: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_read_574: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   READ            
                   STORE 3         
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printB_575: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printIln_582: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printI_577: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printBln_580: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_Entidad_589: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_main_588: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 3          ; Se declaran 3 variables locales. Reservo lugar. 
                   RMEM 1          ; Reservo espacio para la referencia al objeto del Ctor 
                   PUSH 5          ; Apilo el tamanio del CIR 
                   PUSH simple_malloc ; Preparo llamada a malloc 
                   CALL            ; Invoco al malloc 
                   DUP             ; Duplico la referencia al CIR 
                   PUSH VT_Persona_113 ; Guardo la etiqueta de la VT en el CIR 
                   STOREREF 0      
                   DUP             
                   PUSH 113        ; Guardo el ID de la clase en el CIR 
                   STOREREF 1      
                   DUP             
.data 
str_592: DW "Jorge",0    ; Guardo un string 
.code 
                   PUSH str_592    ; Apilo un string 
                   SWAP            ; Intercambio this por expresion 
.data 
str_593: DW "Sarmiento 52",0 ; Guardo un string 
.code 
                   PUSH str_593    ; Apilo un string 
                   SWAP            ; Intercambio this por expresion 
                   PUSH 4525290    ; Apilo un 4525290 
                   SWAP            ; Intercambio this por expresion 
                   PUSH met_Persona_584 ; Llamo al constructor (estoy en un new) 
                   CALL            
                   STORE 0         ; Guardo parametro/var local p1 
                   RMEM 1          ; Reservo espacio para la referencia al objeto del Ctor 
                   PUSH 5          ; Apilo el tamanio del CIR 
                   PUSH simple_malloc ; Preparo llamada a malloc 
                   CALL            ; Invoco al malloc 
                   DUP             ; Duplico la referencia al CIR 
                   PUSH VT_Persona_113 ; Guardo la etiqueta de la VT en el CIR 
                   STOREREF 0      
                   DUP             
                   PUSH 113        ; Guardo el ID de la clase en el CIR 
                   STOREREF 1      
                   DUP             
.data 
str_594: DW "Guillermo",0 ; Guardo un string 
.code 
                   PUSH str_594    ; Apilo un string 
                   SWAP            ; Intercambio this por expresion 
.data 
str_595: DW "Alem 1253",0 ; Guardo un string 
.code 
                   PUSH str_595    ; Apilo un string 
                   SWAP            ; Intercambio this por expresion 
                   PUSH 4595131    ; Apilo un 4595131 
                   SWAP            ; Intercambio this por expresion 
                   PUSH met_Persona_584 ; Llamo al constructor (estoy en un new) 
                   CALL            
                   STORE -1        ; Guardo parametro/var local p2 
                   RMEM 1          ; Reservo espacio para la referencia al objeto del Ctor 
                   PUSH 5          ; Apilo el tamanio del CIR 
                   PUSH simple_malloc ; Preparo llamada a malloc 
                   CALL            ; Invoco al malloc 
                   DUP             ; Duplico la referencia al CIR 
                   PUSH VT_Persona_113 ; Guardo la etiqueta de la VT en el CIR 
                   STOREREF 0      
                   DUP             
                   PUSH 113        ; Guardo el ID de la clase en el CIR 
                   STOREREF 1      
                   DUP             
.data 
str_596: DW "Ana",0      ; Guardo un string 
.code 
                   PUSH str_596    ; Apilo un string 
                   SWAP            ; Intercambio this por expresion 
.data 
str_597: DW "Colon 80",0 ; Guardo un string 
.code 
                   PUSH str_597    ; Apilo un string 
                   SWAP            ; Intercambio this por expresion 
                   PUSH 4595000    ; Apilo un 4595000 
                   SWAP            ; Intercambio this por expresion 
                   PUSH met_Persona_584 ; Llamo al constructor (estoy en un new) 
                   CALL            
                   STORE -2        ; Guardo parametro/var local p3 
                   LOAD 0          ; Cargo parametro/var local p1 
                   RMEM 1          ; Estoy por hacer llamada encadenada, reservo para el valor de retorno 
                   SWAP            ; Bajo el this 
                   PUSH 123        ; Apilo un 123 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 0       ; Cargo el offset del metodo buscarEnAgenda 
                   CALL            
                   LOAD -1         ; Cargo parametro/var local p2 
                   SWAP            ; Intercambio el this con lo evaluado por el parametro actual 
                   DUP             ; Duplico this 
                   LOADREF 0       
                   LOADREF 1       ; Cargo el offset del metodo llamar 
                   CALL            
                   FMEM 3          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
