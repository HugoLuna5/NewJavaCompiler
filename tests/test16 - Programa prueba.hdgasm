.data 
VT_A_9: NOP             ; VT de la clase A 
.data 
VT_SystemIO_10: NOP             ; VT de la clase SystemIO 
.data 
VT_Object_7: NOP             ; VT de la clase Object 
.data 
VT_System_8: NOP             ; VT de la clase System 
.code 
                   PUSH simple_heap_init 
                   CALL            
                   PUSH met_main_58 
                   CALL            
                   HALT            
simple_heap_init: RET 0           ; Retorna inmediatamente 
simple_malloc: LOADFP          ; Inicialización unidad 
                   LOADSP          
                   STOREFP         ; Finaliza inicialización del RA 
                   LOADHL          ; hl 
                   DUP             ; hl 
                   PUSH 1          ; 1 
                   ADD             ; hl+1 
                   STORE 4         ; Guarda el resultado (un puntero a la primer celda de la región de memoria) 
                   LOAD 3          ; Carga la cantidad de celdas a alojar (parámetro que debe ser positivo) 
                   ADD             
                   STOREHL         ; Mueve el heap limit (hl). Expande el heap 
                   STOREFP         
                   RET 1           ; Retorna eliminando el parámetro 
.data 
mensaje_error_cast: DW "[Excepcion] Se produjo error al intentar castear",0 ; Mensaje para casteos erroneos 
.code 
error_cast: PUSH mensaje_error_cast ; Apilo msj de error 
                   SPRINT          
                   HALT            
met_A_61: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_esCapicua_59: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 1          ; Reservo lugar para el valor de retorno 
                   LOAD 3          ; Cargo parametro/var local n 
                   PUSH met_invertir_60 
                   CALL            
                   LOAD 3          ; Cargo parametro/var local n 
                   EQ              
                   STORE 4         
                   FMEM 0          ; Libero 0 variables locales 
                   STOREFP         
                   RET 1           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_invertir_60: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   PUSH 0          ; Apilo un 0 
                   STORE 0         ; Guardo parametro/var local rta 
                                   ; Comienzo del WHILE_64 
WHILE_L1_64: NOP             ;  
                   LOAD 3          ; Cargo parametro/var local n 
                   PUSH 0          ; Apilo un 0 
                   NE              
                   BF WHILE_L2_64  
                   LOAD 0          ; Cargo parametro/var local rta 
                   PUSH 10         ; Apilo un 10 
                   MUL             
                   LOAD 3          ; Cargo parametro/var local n 
                   PUSH 10         ; Apilo un 10 
                   MOD             
                   ADD             
                   STORE 0         ; Guardo parametro/var local rta 
                   LOAD 3          ; Cargo parametro/var local n 
                   PUSH 10         ; Apilo un 10 
                   DIV             
                   STORE 3         ; Guardo parametro/var local n 
                   JUMP WHILE_L1_64 
WHILE_L2_64: NOP             ;  
                                   ; Fin del WHILE_64 
                   LOAD 0          ; Cargo parametro/var local rta 
                   STORE 4         
                   FMEM 1          ; Libero 1 variables locales 
                   STOREFP         
                   RET 1           
                   FMEM 1          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_main_58: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
.data 
str_65: DW "Ingrese un numero: ",0 ; Guardo un string 
.code 
                   PUSH str_65     ; Apilo un string 
                   PUSH met_printS_52 ; Preparo para llamar al metodo System.printS 
                   CALL            
                   RMEM 1          ; Voy a llamar a un metodo estatico (no void), reservo lugar para lo que devuelva 
                   PUSH met_readNumero_62 ; Preparo para llamar al metodo SystemIO.readNumero 
                   CALL            
                   STORE 0         ; Guardo parametro/var local x 
                                   ; Comienzo del IF_66 
                   RMEM 1          ; Reservo lugar para el valor de retorno 
                   LOAD 0          ; Cargo parametro/var local x 
                   PUSH met_esCapicua_59 
                   CALL            
                   BF IF_L1_66     
.data 
str_67: DW "El numero es capicua",0 ; Guardo un string 
.code 
                   PUSH str_67     ; Apilo un string 
                   PUSH met_printS_52 ; Preparo para llamar al metodo System.printS 
                   CALL            
                   JUMP IF_L2_66   
IF_L1_66: NOP             ;  
.data 
str_68: DW "El numero NO es capicua",0 ; Guardo un string 
.code 
                   PUSH str_68     ; Apilo un string 
                   PUSH met_printS_52 ; Preparo para llamar al metodo System.printS 
                   CALL            
IF_L2_66: NOP             ;  
                                   ; Fin del IF_66 
                   FMEM 1          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_SystemIO_63: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_readNumero_62: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 1          ; Voy a llamar a un metodo estatico (no void), reservo lugar para lo que devuelva 
                   PUSH met_read_48 ; Preparo para llamar al metodo System.read 
                   CALL            
                   STORE 3         
                   FMEM 0          ; Libero 0 variables locales 
                   STOREFP         
                   RET 0           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_Object_46: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_System_47: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printC_50: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printS_52: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_println_53: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printCln_55: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printSln_57: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_read_48: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   READ            
                   STORE 3         
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printB_49: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printIln_56: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printI_51: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printBln_54: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
