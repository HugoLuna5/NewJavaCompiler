.data 
VT_InvertirNumero_26: NOP             ; VT de la clase InvertirNumero 
.data 
VT_Object_24: NOP             ; VT de la clase Object 
.data 
VT_System_25: NOP             ; VT de la clase System 
.code 
                   PUSH simple_heap_init 
                   CALL            
                   PUSH met_main_172 
                   CALL            
                   HALT            
simple_heap_init: RET 0           ; Retorna inmediatamente 
simple_malloc: LOADFP          ; Inicialización unidad 
                   LOADSP          
                   STOREFP         ; Finaliza inicialización del RA 
                   LOADHL          ; hl 
                   DUP             ; hl 
                   PUSH 1          ; 1 
                   ADD             ; hl+1 
                   STORE 4         ; Guarda el resultado (un puntero a la primer celda de la región de memoria) 
                   LOAD 3          ; Carga la cantidad de celdas a alojar (parámetro que debe ser positivo) 
                   ADD             
                   STOREHL         ; Mueve el heap limit (hl). Expande el heap 
                   STOREFP         
                   RET 1           ; Retorna eliminando el parámetro 
.data 
mensaje_error_cast: DW "[Excepcion] Se produjo error al intentar castear",0 ; Mensaje para casteos erroneos 
.code 
error_cast: PUSH mensaje_error_cast ; Apilo msj de error 
                   SPRINT          
                   HALT            
met_InvertirNumero_175: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_invertir_174: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 2          ; Se declaran 2 variables locales. Reservo lugar. 
                   PUSH 0          ; Apilo un 0 
                   STORE 0         ; Guardo parametro/var local cuenta 
                                   ; Comienzo del FOR_176 
                   PUSH 0          ; Apilo un 0 
                   STORE -1        ; Guardo parametro/var local aux 
FOR_L1_176: NOP             ;  
                   LOAD -1         ; Cargo parametro/var local aux 
                   LOAD 3          ; Cargo parametro/var local digitos 
                   LT              
                   BF FOR_L2_176   
                   LOAD 0          ; Cargo parametro/var local cuenta 
                   PUSH 10         ; Apilo un 10 
                   MUL             
                   LOAD 4          ; Cargo parametro/var local numero 
                   PUSH 10         ; Apilo un 10 
                   MOD             
                   ADD             
                   STORE 0         ; Guardo parametro/var local cuenta 
                   LOAD 4          ; Cargo parametro/var local numero 
                   PUSH 10         ; Apilo un 10 
                   DIV             
                   STORE 4         ; Guardo parametro/var local numero 
                   LOAD -1         ; Cargo parametro/var local aux 
                   PUSH 1          ; Apilo un 1 
                   ADD             
                   STORE -1        ; Guardo parametro/var local aux 
                   JUMP FOR_L1_176 
FOR_L2_176: NOP             ;  
                                   ; Fin del FOR_176 
                   LOAD 0          ; Cargo parametro/var local cuenta 
                   STORE 5         
                   FMEM 2          ; Libero 2 variables locales 
                   STOREFP         
                   RET 2           
                   FMEM 2          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 2           ; Retorna de la llamada, liberando parametros 
met_main_172: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 3          ; Se declaran 3 variables locales. Reservo lugar. 
                   RMEM 1          ; Voy a llamar a un metodo estatico (no void), reservo lugar para lo que devuelva 
                   PUSH met_readInt_159 ; Preparo para llamar al metodo System.readInt 
                   CALL            
                   STORE 0         ; Guardo parametro/var local numero 
                   RMEM 1          ; Reservo lugar para el valor de retorno 
                   LOAD 0          ; Cargo parametro/var local numero 
                   PUSH met_contarDigitos_173 
                   CALL            
                   STORE -1        ; Guardo parametro/var local digitos 
                   RMEM 1          ; Reservo lugar para el valor de retorno 
                   LOAD 0          ; Cargo parametro/var local numero 
                   LOAD -1         ; Cargo parametro/var local digitos 
                   PUSH met_invertir_174 
                   CALL            
                   STORE -2        ; Guardo parametro/var local invertido 
                   LOAD -2         ; Cargo parametro/var local invertido 
                   PUSH met_printIln_168 ; Preparo para llamar al metodo System.printIln 
                   CALL            
                   FMEM 3          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_contarDigitos_173: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   PUSH 0          ; Apilo un 0 
                   STORE 0         ; Guardo parametro/var local cuenta 
                                   ; Comienzo del WHILE_177 
WHILE_L1_177: NOP             ;  
                   LOAD 3          ; Cargo parametro/var local numero 
                   PUSH 0          ; Apilo un 0 
                   GT              
                   BF WHILE_L2_177 
                   LOAD 3          ; Cargo parametro/var local numero 
                   PUSH 10         ; Apilo un 10 
                   DIV             
                   STORE 3         ; Guardo parametro/var local numero 
                   LOAD 0          ; Cargo parametro/var local cuenta 
                   PUSH 1          ; Apilo un 1 
                   ADD             
                   STORE 0         ; Guardo parametro/var local cuenta 
                   JUMP WHILE_L1_177 
WHILE_L2_177: NOP             ;  
                                   ; Fin del WHILE_177 
                   LOAD 0          ; Cargo parametro/var local cuenta 
                   STORE 4         
                   FMEM 1          ; Libero 1 variables locales 
                   STOREFP         
                   RET 1           
                   FMEM 1          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_Object_157: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_System_158: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printC_162: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printCln_167: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printB_161: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printIln_168: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_readString_160: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   READSTRING      
                   STORE 3         
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printI_163: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printFloat_169: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   FLOATPRINT      
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printBln_166: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printS_164: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_println_165: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printSln_170: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printSIO_171: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINTIO        
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_readInt_159: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   READINT         
                   STORE 3         
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
