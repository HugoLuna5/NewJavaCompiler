.data 
VT_A_34: NOP             ; VT de la clase A 
.data 
VT_B_35: NOP             ; VT de la clase B 
.data 
VT_C_36: NOP             ; VT de la clase C 
.data 
VT_Object_32: NOP             ; VT de la clase Object 
.data 
VT_System_33: NOP             ; VT de la clase System 
.code 
                   PUSH simple_heap_init 
                   CALL            
                   PUSH met_main_207 
                   CALL            
                   HALT            
simple_heap_init: RET 0           ; Retorna inmediatamente 
simple_malloc: LOADFP          ; Inicialización unidad 
                   LOADSP          
                   STOREFP         ; Finaliza inicialización del RA 
                   LOADHL          ; hl 
                   DUP             ; hl 
                   PUSH 1          ; 1 
                   ADD             ; hl+1 
                   STORE 4         ; Guarda el resultado (un puntero a la primer celda de la región de memoria) 
                   LOAD 3          ; Carga la cantidad de celdas a alojar (parámetro que debe ser positivo) 
                   ADD             
                   STOREHL         ; Mueve el heap limit (hl). Expande el heap 
                   STOREFP         
                   RET 1           ; Retorna eliminando el parámetro 
.data 
mensaje_error_cast: DW "[Excepcion] Se produjo error al intentar castear",0 ; Mensaje para casteos erroneos 
.code 
error_cast: PUSH mensaje_error_cast ; Apilo msj de error 
                   SPRINT          
                   HALT            
met_A_208: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_main_207: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   PUSH met_m1_209 ; Preparo para llamar al metodo B.m1 
                   CALL            
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   RMEM 1          ; Voy a llamar a un metodo estatico (no void), reservo lugar para lo que devuelva 
                   PUSH met_m2_211 ; Preparo para llamar al metodo C.m2 
                   CALL            
                   STORE 0         ; Guardo parametro/var local aux 
                                   ; Comienzo del IF_214 
                   LOAD 0          ; Cargo parametro/var local aux 
                   PUSH 2          ; Apilo un 2 
                   EQ              
                   BF IF_L1_214    
.data 
str_215: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_215    ; Apilo un string 
                   PUSH met_printSln_206 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   JUMP IF_L2_214  
IF_L1_214: NOP             ;  
.data 
str_216: DW "[ERROR]",0  ; Guardo un string 
.code 
                   PUSH str_216    ; Apilo un string 
                   PUSH met_printSln_206 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_214: NOP             ;  
                                   ; Fin del IF_214 
                   RMEM 1          ; Se declaran 1 variables locales. Reservo lugar. 
                   RMEM 1          ; Voy a llamar a un metodo estatico (no void), reservo lugar para lo que devuelva 
                   PUSH met_m3_212 ; Preparo para llamar al metodo C.m3 
                   CALL            
                   STORE -1        ; Guardo parametro/var local rta 
                                   ; Comienzo del IF_217 
                   LOAD -1         ; Cargo parametro/var local rta 
                   NOT             
                   BF IF_L1_217    
.data 
str_218: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_218    ; Apilo un string 
                   PUSH met_printSln_206 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   JUMP IF_L2_217  
IF_L1_217: NOP             ;  
.data 
str_219: DW "[ERROR]",0  ; Guardo un string 
.code 
                   PUSH str_219    ; Apilo un string 
                   PUSH met_printSln_206 ; Preparo para llamar al metodo System.printSln 
                   CALL            
IF_L2_217: NOP             ;  
                                   ; Fin del IF_217 
                   FMEM 2          ; Libero las variables locales declaradas dentro de mi bloque 
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_B_210: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_m1_209: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
.data 
str_220: DW "Entre a m1",0 ; Guardo un string 
.code 
                   PUSH str_220    ; Apilo un string 
                   PUSH met_printSln_206 ; Preparo para llamar al metodo System.printSln 
                   CALL            
.data 
str_221: DW "[OK]",0     ; Guardo un string 
.code 
                   PUSH str_221    ; Apilo un string 
                   PUSH met_printSln_206 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_C_213: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_m2_211: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
.data 
str_222: DW "Entre a m2",0 ; Guardo un string 
.code 
                   PUSH str_222    ; Apilo un string 
                   PUSH met_printSln_206 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   PUSH 2          ; Apilo un 2 
                   STORE 3         
                   FMEM 0          ; Libero 0 variables locales 
                   STOREFP         
                   RET 0           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_m3_212: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
.data 
str_223: DW "Entre a m3",0 ; Guardo un string 
.code 
                   PUSH str_223    ; Apilo un string 
                   PUSH met_printSln_206 ; Preparo para llamar al metodo System.printSln 
                   CALL            
                   PUSH 0          ; Apilo FALSE 
                   STORE 3         
                   FMEM 0          ; Libero 0 variables locales 
                   STOREFP         
                   RET 0           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_Object_195: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_System_196: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printC_199: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printS_201: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_println_202: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printCln_204: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   CPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printSln_206: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   SPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_read_197: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   READ            
                   STORE 3         
                   STOREFP         ; Reestablece el contexto 
                   RET 0           ; Retorna de la llamada, liberando parametros 
met_printB_198: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printIln_205: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printI_200: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   IPRINT          
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
met_printBln_203: LOADFP          ; Guardar enlace dinamico 
                   LOADSP          ; Inicializar el FP 
                   STOREFP         ;  
                   LOAD 3          
                   BPRINT          
                   PRNLN           
                   STOREFP         ; Reestablece el contexto 
                   RET 1           ; Retorna de la llamada, liberando parametros 
